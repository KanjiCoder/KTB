//+==========================================================+// // [001]
//| Code Section Is Below This Point                         |// // [001]
//+==========================================================+// // [001]
//|#_KANJIS_TILEMAP_BASE_#:==================================|// // [001]
//|                                                          |// // [001]
//|  @KTB@ : Kanji_Tilemap_Base / Kanjis_Tilemap_Base        |// // [001]
//|                                                          |// // [001]
//|  A project to allow you to quickly experiment with       |// // [001]
//|  tilemap shader ideas without having to do all of        |// // [001]
//|  the setup code needed to create the webgl contexts      |// // [001]
//|  and basic editing code for setting down tiles.          |// // [001]
//|                                                          |// // [001]
//+==================================:#_KANJIS_TILEMAP_BASE_#+// // [001]
//:#_D_FOR_DATA_WHICH_IS_GLOBAL_#:===========================:// // [002]
                                                                 // [002]
    var d_p2k_l01 ; //: Uniform LOCATION #1 ( sampler )::://     // [002]
    var d_p2k_u01 ; //:      GPU UNIFORM #1 ( sampler )::://     // [002]
                    //:                                ::://     // [002]
    var d_p2k_l02 ; //: Uniform LOCATION #2 ( sampler )::://     // [002]
    var d_p2k_u02 ; //:      GPU UNIFORM #2 ( sampler )::://     // [002]
                    //:                                ::://     // [002]
    var d_p2k_l03 ; //: Uniform LOCATION #3 ( sampler )::://     // [002]
    var d_p2k_u03 ; //:      GPU UNIFORM #3 ( sampler )::://     // [002]
                    //:                                ::://     // [002]
    var d_p2k_l04 ; //: Uniform LOCATION #4 ( sampler )::://     // [002]
    var d_p2k_u04 ; //:      GPU UNIFORM #4 ( sampler )::://     // [002]
                                                                 // [002]
//:===========================:#_D_FOR_DATA_WHICH_IS_GLOBAL_#:// // [002]
                                                                 // [---]
window.alert( "[HELLO_WORLD]" );                                 // [001]
                                                                 // [---]
//+==========================================================+// // [001]
//| Code Section Is Above This Point                         |// // [001]
//+==========================================================+// // [001]
//+==========================================================+// // [001]
//| Comments Section Is Below This Point                     |// // [001]
//+==========================================================+// // [001]
/** ******************************************************** *** // [001]
#_KANJIS_TILEMAP_BASE_# :======================================: // [001]
                                                                 // [001]
    Goal : Create a tilemap project who's source code            // [001]
         : can be used any time you want to do a quick           // [001]
         : tilemap rendering experiment. It should be            // [001]
         : flexible enough to use is as a library that           // [001]
         : can be used for the[ MKB ]project.                    // [001]
         : @MKB@ : Magic Kyoot Ball.                             // [001]
                                                                 // [001]
    Structure : 1 shader for tilemap stuff                       // [001]
              : 1 shader for sprite rendering stuff.             // [001]
              : 1 shader for tilemap menu stuff                  // [001]
              : 1 shader for sprite MENU rendering.              // [001]
                                                                 // [001]
    Uniforms  : Only 4 uniforms. 1 for each texture              // [001]
              : sampler we need. Everything else is              // [001]
              : encoded into texture memory somehow.             // [001]
                                                                 // [001]
    Whatever Texture Memory Block :                              // [001]
                                                                 // [001]
        @wmx@ : whatever_memory - X origin                       // [001]
        @wmy@ : whatever_memory - Y origin                       // [001]
                                                                 // [001]
                                                                 // [001]
:======================================: #_KANJIS_TILEMAP_BASE_# // [001]
#_D_FOR_DATA_WHICH_IS_GLOBAL_# :===============================: // [002]
                                                                 // [002]
    Anything that ends up colliding with "AIM.JS"                // [002]
    will get further prefix of "ktb_" "                          // [002]
    So, if[ d_p2k_000 ]collides, with "AIM.JS" then              // [002]
    [ d_p2k_000 ]becomes[ ktb_d_p2k_000 ].                       // [002]
                                                                 // [002]
                                                                 // [002]
    All mutable data or complex immutable data goes here.        // [002]
    The global/toplevel stuff. The filescope stuff.              // [002]
                                                                 // [002]
:===============================: #_D_FOR_DATA_WHICH_IS_GLOBAL_# // [002]
*** ******************************************************** **/ // [001]
//+==========================================================+// // [001]
//| Comments Section Is Above This Point                     |// // [001]
//+==========================================================+// // [001]
     
     
     
     
     
     
     
     
     
     
     
     