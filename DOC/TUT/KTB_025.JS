//+==========================================================+// // [---][001]
//| Code Section Is Below This Point                         |// // [---][001]
//+==========================================================+// // [---][001]
//|#_KANJIS_TILEMAP_BASE_#:==================================|// // [---][001]
//|                                                          |// // [---][001]
//|  @KTB@ : Kanji_Tilemap_Base / Kanjis_Tilemap_Base        |// // [---][001]
//|                                                          |// // [---][001]
//|  A project to allow you to quickly experiment with       |// // [---][001]
//|  tilemap shader ideas without having to do all of        |// // [---][001]
//|  the setup code needed to create the webgl contexts      |// // [---][001]
//|  and basic editing code for setting down tiles.          |// // [---][001]
//|                                                          |// // [---][001]
//+==================================:#_KANJIS_TILEMAP_BASE_#+// // [---][001]
//:#_C_CONSTANT_#:===========================================:// // [004][---]
                                                                 // [---][---]
    const _constants_=(0)///////////////////////////////////     // [012]
    ////                                                         // [012]
    ,   c_wvc =(           "webgl2" )//: WGL_VER.CONTEXT ://     // [012]
    ,   c_wvs =( "# version 300 es" )//: WGL_VER.SHADER  ://     // [012]
    ////                                                         // [012]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [012]
                                                                 // [---][---]
//:===========================================:#_C_CONSTANT_#:// // [004][---]
//:#_D_DATA_#:===============================================:// // [004][002]
                                                                 // [---][002]
    var d_p2k_l01 ; //: Uniform LOCATION #1 ( sampler )::://     // [---][002]
    var d_p2k_u01 ; //:      GPU UNIFORM #1 ( sampler )::://     // [---][002]
                    //:                                ::://     // [---][002]
    var d_p2k_l02 ; //: Uniform LOCATION #2 ( sampler )::://     // [---][002]
    var d_p2k_u02 ; //:      GPU UNIFORM #2 ( sampler )::://     // [---][002]
                    //:                                ::://     // [---][002]
    var d_p2k_l03 ; //: Uniform LOCATION #3 ( sampler )::://     // [---][002]
    var d_p2k_u03 ; //:      GPU UNIFORM #3 ( sampler )::://     // [---][002]
                    //:                                ::://     // [---][002]
    var d_p2k_l04 ; //: Uniform LOCATION #4 ( sampler )::://     // [---][002]
    var d_p2k_u04 ; //:      GPU UNIFORM #4 ( sampler )::://     // [---][002]
                                                                 // [---][---]
    var d_hp1 ;;;;; //: Handle_Program #1 :::::::::::::::://     // [018][003]
    var d_hp2 ;;;;; //: Handle_Program #2 :::::::::::::::://     // [018][003]
    var d_hp3 ;;;;; //: Handle_Program #3 :::::::::::::::://     // [018][003]
    var d_hp4 ;;;;; //: Handle_Program #4 :::::::::::::::://     // [018][003]
                                                                 // [---][003]
    var d_hv1 ;;;;; //: Handle_Vertex  #1 (shader_object)://     // [---][003]
    var d_hv2 ;;;;; //: Handle_Vertex  #2 (shader_object)://     // [---][003]
    var d_hv3 ;;;;; //: Handle_Vertex  #3 (shader_object)://     // [---][003]
    var d_hv4 ;;;;; //: Handle_Vertex  #4 (shader_object)://     // [---][003]
                                                                 // [---][003]
    var d_hf1 ;;;;; //: Handle_Fragme  #1 (shader_object)://     // [---][003]
    var d_hf2 ;;;;; //: Handle_Fragme  #2 (shader_object)://     // [---][003]
    var d_hf3 ;;;;; //: Handle_Fragme  #3 (shader_object)://     // [---][003]
    var d_hf4 ;;;;; //: Handle_Fragme  #4 (shader_object)://     // [---][003]
                                                                 // [---][003]
    var d_sv1 ;;;;; //: Source_Vertex  #1 (source_string)://     // [---][003]
    var d_sv2 ;;;;; //: Source_Vertex  #2 (source_string)://     // [---][003]
    var d_sv3 ;;;;; //: Source_Vertex  #3 (source_string)://     // [---][003]
    var d_sv4 ;;;;; //: Source_Vertex  #4 (source_string)://     // [---][003]
                                                                 // [---][003]
    var d_sf1 ;;;;; //: Source_Fragme  #1 (source_string)://     // [---][003]
    var d_sf2 ;;;;; //: Source_Fragme  #2 (source_string)://     // [---][003]
    var d_sf3 ;;;;; //: Source_Fragme  #3 (source_string)://     // [---][003]
    var d_sf4 ;;;;; //: Source_Fragme  #4 (source_string)://     // [---][003]
                                                                 // [---][---]
    var d_htm_win ; //: HTML_related_thingy.WINDOW       ://     // [---][008]
    var d_htm_doc ; //: HTML_related_thingy.DOCUMENT     ://     // [---][008]
    var d_htm_bod ; //: HTML_related_thingy.BODY         ://     // [---][008]
    var d_htm_can ; //: HTML_related_thingy.CANVAS       ://     // [011]
                                                                 // [011]
    var d_wgl ;;;;; //: Web_GL (context object)          ://     // [011]
                                                                 // [---][---]
//:===============================================:#_D_DATA_#:// // [---][004][002]
//:#_D_DATA_SHADER_001_#:====================================:// // [013]
d_sv1=((c_wvs)+"\n")+(` //:::::::[ TILEMAP_VERT_SHADER.GAME ]:// // [013]
                                                                 // [---]
    void main(){}                                                // [024]
                                                                 // [---]
`);;//:::::::::::::::::::::::::::[ TILEMAP_VERT_SHADER.GAME ]:// // [013]
d_sf1=((c_wvs)+"\n")+(` //:::::::[ TILEMAP_FRAG_SHADER.GAME ]:// // [013]
                                                                 // [---]
    void main(){}                                                // [024]
                                                                 // [---]
`);;//:::::::::::::::::::::::::::[ TILEMAP_FRAG_SHADER.GAME ]:// // [013]
//:====================================:#_D_DATA_SHADER_001_#:// // [013]
//:#_D_DATA_SHADER_002_#:====================================:// // [013]
d_sv2=((c_wvs)+"\n")+(` //:::::::[ POINT_SPRITE_VERT_SHADER ]:// // [013]
                                                                 // [---]
    void main(){}                                                // [024]
                                                                 // [---]
`);;//::::::::::::::::::::::[ POINT_SPRITE_VERT_SHADER.GAME ]:// // [013]
d_sf2=((c_wvs)+"\n")+(` //::[ POINT_SPRITE_FRAG_SHADER.GAME ]:// // [013]
                                                                 // [---]
    void main(){}                                                // [024]
                                                                 // [---]
`);;//::::::::::::::::::::::[ POINT_SPRITE_FRAG_SHADER.GAME ]:// // [013]
//:====================================:#_D_DATA_SHADER_002_#:// // [013]
//:#_D_DATA_SHADER_003_#:====================================:// // [013]
d_sv3=((c_wvs)+"\n")+(` //:::::::[ TILEMAP_VERT_SHADER.MENU ]:// // [013]
                                                                 // [---]
    void main(){}                                                // [024]
                                                                 // [---]
`);;//:::::::::::::::::::::::::::[ TILEMAP_VERT_SHADER.MENU ]:// // [013]
d_sf3=((c_wvs)+"\n")+(` //:::::::[ TILEMAP_FRAG_SHADER.MENU ]:// // [013]
                                                                 // [---]
    void main(){}                                                // [024]
                                                                 // [---]
`);;//:::::::::::::::::::::::::::[ TILEMAP_FRAG_SHADER.MENU ]:// // [013]
//:====================================:#_D_DATA_SHADER_003_#:// // [013]
//:#_D_DATA_SHADER_004_#:====================================:// // [013]
d_sv4=((c_wvs)+"\n")+(` //::[ POINT_SPRITE_VERT_SHADER.MENU ]:// // [013]
                                                                 // [---]
    void main(){}                                                // [024]
                                                                 // [---]
`);;//::::::::::::::::::::::[ POINT_SPRITE_VERT_SHADER.MENU ]:// // [013]
d_sf4=((c_wvs)+"\n")+(` //::[ POINT_SPRITE_FRAG_SHADER.MENU ]:// // [013]
                                                                 // [---]
    void main(){}                                                // [024]
                                                                 // [---]
`);;//::::::::::::::::::::::[ POINT_SPRITE_FRAG_SHADER.MENU ]:// // [013]
//:====================================:#_D_DATA_SHADER_004_#:// // [013]
//:#_F_FUNCTION_#:===========================================:// // [004][---]
                                                                 // [---]
    const   F_ERROR =( i_msg )=>{   //::::::::::::::::::::::::// // [---][009]
                                                                 // [---][009]
        console.log(  "[ F_ERROR ]:" + i_msg );                  // [---][009]
        window.alert( "[ F_ERROR ]:" + i_msg );                  // [---][009]
        throw(        "[ F_ERROR ]:" + i_msg );                  // [---][009]
                                                                 // [---][009]
    };;//:::::::::::::::::::::::::::::::::::::::::[ F_ERROR ]:// // [---][009]
    const   F_MESSAGE =( i_msg )=>{ //::::::::::::[ F_MSG   ]:// // [010][---]
                                                                 // [010][---]
        console.log( i_msg );                                    // [010][---]
                                                                 // [010][---]
    };;//:::::::::::::::::::::::::::::::::::::::::[ F_MSG   ]:// // [010][---]
    const   F_INPUT_MOUSE =( i_mev )=>{   //::::::::::::::::::// // [---][005]
    //:======================================================:// // [---][005]
                                                                 // [---][005]
        /** CODE_GOES_HERE **/                                   // [---][005]
                                                                 // [---][005]
    //:======================================================:// // [---][005]
    };;//:::::::::::::::::::::::::::::::::::[ F_INPUT_MOUSE ]:// // [---][005]
    const   F_INPUT_KEYBOARD =( i_kev )=>{   //:::::::::::::::// // [---][005]
    //:======================================================:// // [---][005]
                                                                 // [---][005]
        /** CODE_GOES_HERE **/                                   // [---][005]
                                                                 // [---][005]
    //:======================================================:// // [---][005]
    };;//::::::::::::::::::::::::::::::::[ F_INPUT_KEYBOARD ]:// // [---][005]
    const   F_LOOP_FOREVER =( )=>{  //::::::::::::::::::::::::// // [---][005]
                                                                 // [---][005]
        /** CODE_GOES_HERE **/                                   // [---][005]
                                                                 // [---][005]
    };;//::::::::::::::::::::::::::::::::::[ F_LOOP_FOREVER ]:// // [---][005]
    const   F_COMPILE_SHADER =( //::::::::::::::::[ COMPILE ]:// // [021][---]
                                                                 // [021][---]
        i_wso   //: @i_wso@ : INN - Webgl_Shader_Object :://     // [021][---]
    ,   i_tbm   //: @i_tbm@ : INN - Trace_Back_Message ::://     // [021][---]
                                                                 // [021][---]
    )=>{ //:::::::::::::::::::::::::::::::::::::::[ COMPILE ]:// // [021][015]
                                                                 // [---][015]
        const _C_ =( d_wgl.compileShader     .bind(d_wgl) );     // [---][015]
        const _P_ =( d_wgl.getShaderParameter.bind(d_wgl) );     // [---][015]
        const _S_ =( d_wgl.COMPILE_STATUS                 );     // [---][015]
        const _L_ =( d_wgl.getShaderInfoLog  .bind(d_wgl) );     // [---][015]
        const SRC =( d_wgl.getShaderSource   .bind(d_wgl) );     // [022][---]
                                                                 // [---][015]
                       _C_( i_wso );;;;;;;;;;;;;;;;;;;;;;;;;     // [---][015]
        if(    !     ( _P_( i_wso,_S_) ) ){ ////////////////     // [---][015]
            let err =( _L_( i_wso ) );                           // [022][BUG][015]
            let src =( SRC( i_wso ) );                           // [022][FIX][---]
            console.log( "[SHADER____TBM]:" + i_tbm  );;;;;;     // [---][021][---]
            console.log( "[SHADER____ERR]:" +   err  );;;;;;     // [022][BUG][015]
            console.log( "[SHADER____SRC]:" +   src  );;;;;;     // [022][FIX][---]
            F_ERROR( "[_$_YOUR_SHADER_IS_EVIL_$_]"   );;;;;;     // [---][015]
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [---][015]
                                                                 // [---][015]
    };;//:::::::::::::::::::::::::::::::::::::::::[ COMPILE ]:// // [---][015]
    const   F_LINK_PROGRAM =(                                    // [025][--------]
                                                                 // [025][--------]
        i_wpo   //: @i_wpo@ : INN - Webgl_Program_Object ://     // [025][--------]
    ,   i_tbm   //: @i_tbm@ : INN - Trace_Back_Message ::://     // [025][--------]
                                                                 // [025][--------]
    )=>{ //::::::::::::::::::::::::::::::::::::::::::[ LINK ]:// // [025][019][---]
                                                                 // [---][019][---]
        const L_P =( d_wgl.linkProgram        .bind(d_wgl));     // [---][019][---]
        const _P_ =( d_wgl.getProgramParameter.bind(d_wgl));     // [---][019][---]
        const _S_ =( d_wgl.LINK_STATUS                    );     // [---][019][---]
        const _L_ =( d_wgl.getProgramInfoLog  .bind(d_wgl));     // [---][019][---]
                                                                 // [---][019][---]
                       L_P( i_wpo );;;;;;;;;;;;;;;;;;;;;;;;;     // [---][019][---]
        if(    !     ( _P_( i_wpo,_S_) ) ){ ////////////////     // [---][019][---]
            let err =( _L_( i_wpo ) );                           // [025][BUG][019][---]
            console.log( "[PROGRAM____TBM]:" + i_tbm );;;;;;     // [025][-------------]
            console.log( "[PROGRAM____ERR]:" +   err );;;;;;     // [025][BUG][019][---]
            F_ERROR( "[_$_YOUR_PROGRAM_IS_EVIL_$_]"  );;;;;;     // [---][019][---]
        };;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [---][019][---]
                                                                 // [---][019][---]
    };;//::::::::::::::::::::::::::::::::::::::::::::[ LINK ]:// // [---][019][---]
    const   F_SETUP =( )=>{   //::::::::::::::::::::::::::::::// // [---][005]
    //:======================================================:// // [---][005]
                                                                 // [---]
        window.alert( "[HELLO_WORLD]" );                         // [006][MOV][001]
                                                                 // [---]
        //:#_SETUP_FUNCTION_POINTERS_#:==================://     // [---][009]
                                                                 // [---][009]
            const ERR =( F_ERROR   );                            // [---][009]
            const MSG =( F_MESSAGE );                            // [010][---]
                                                                 // [---][009]
        //:==================:#_SETUP_FUNCTION_POINTERS_#://     // [---][009]
        //:#_BASIC_DOM_SETUP_#:==========================://     // [---][008]
                                                                 // [---][008]
            d_htm_win =( window               );                 // [---][008]
            d_htm_doc =( window.document      );                 // [---][008]
            d_htm_bod =( window.document.body );                 // [---][008]
            if( ! d_htm_bod ){                                   // [---][008]
                                                                 // [---][008]
                d_htm_bod = d_htm_doc.createElement("body");     // [---][008]
                d_htm_doc.body =( d_htm_bod );                   // [---][008]
                MSG( "[_$_BODY_CREATED_AND_APPENDED_$_]" );;     // [010][---]
                                                                 // [---][008]
            };;                                                  // [---][008]
        //:==========================:#_BASIC_DOM_SETUP_#://     // [---][008]
        //:#_BASIC_DOM_CHECK_#:==========================://     // [---][009]
                                                                 // [---][009]
            if( ! d_htm_win ){ ERR( "[d_htm_win]" ); };;         // [---][009]
            if( ! d_htm_doc ){ ERR( "[d_htm_doc]" ); };;         // [---][009]
            if( ! d_htm_bod ){ ERR( "[d_htm_bod]" ); };;         // [---][009]
                                                                 // [---][009]
        //:==========================:#_BASIC_DOM_CHECK_#://     // [---][009]
        //:#_BASIC_GRAPHICS_SETUP_#:=====================://     // [---][011]
                                                                 // [---][011]
            d_htm_can =(d_htm_doc.createElement("canvas"));;     // [---][011]
            d_htm_can.width =( 512 );;;;;;;;;;;;;;;;;;;;;;;;     // [---][011]
            d_htm_can.height=( 512 );;;;;;;;;;;;;;;;;;;;;;;;     // [---][011]
                                                                 // [---][011]
            d_wgl     =(d_htm_can.getContext( c_wvc ));;;;;;     // [012][011]
                                                                 // [---][011]
        //:=====================:#_BASIC_GRAPHICS_SETUP_#://     // [---][011]
        //:#_BASIC_GRAPHICS_CHECK_#:=====================://     // [---][011]
                                                                 // [---][011]
            if( ! d_htm_can ){ ERR( "[d_htm_can]" ); };;;;;;     // [---][011]
            if( ! d_wgl     ){ ERR( "[d_wgl.___]" ); };;;;;;     // [---][011]
                                                                 // [---][011]
        //:=====================:#_BASIC_GRAPHICS_CHECK_#://     // [---][011]
        //:#_CREATE_EMPTY_SHADER_PROGRAMS_#:=============://     // [---][014]
                                                                 // [---][014]
            const C_S =( d_wgl.createShader.bind(d_wgl) );;;     // [---][014]
            const _v_ =( d_wgl.VERTEX_SHADER   );;;;;;;;;;;;     // [---][014]
            const _f_ =( d_wgl.FRAGMENT_SHADER );;;;;;;;;;;;     // [---][014]
                                                                 // [---][014]
                             //:@VSO@:Vertex_Shader_Obj  ://     // [---][014]
            d_hv1=(C_S(_v_));//: VSO.GAME_MAP     :::::::://     // [---][014]
            d_hv2=(C_S(_v_));//: VSO.GAME_SPRITE  :::::::://     // [---][014]
            d_hv3=(C_S(_v_));//: VSO.MENU_MAP     :::::::://     // [---][014]
            d_hv4=(C_S(_v_));//: VSO.MENU_SPRITE  :::::::://     // [---][014]
                             //: @sv#@ : Shader_Vertex   ://     // [---][014]
                             ///////////////////////////////     // [---][014]
                             //:@FSO@:Fragment_Shader_Obj://     // [---][014]
            d_hf1=(C_S(_f_));//: FSO.GAME_MAP     :::::::://     // [---][014]
            d_hf2=(C_S(_f_));//: FSO.GAME_SPRITE  :::::::://     // [---][014]
            d_hf3=(C_S(_f_));//: FSO.MENU_MAP     :::::::://     // [---][014]
            d_hf4=(C_S(_f_));//: FSO.MENU_SPRITE  :::::::://     // [---][014]
                             //: @sf#@ : Shader_Fragment ://     // [---][014]
                                                                 // [---][014]
        //:=============:#_CREATE_EMPTY_SHADER_PROGRAMS_#://     // [---][014]
        //:#_CREATE_EMPTY_RENDER_PIPELINES_#:============://     // [---][016]
                                                                 // [---][016]
            const C_P =(d_wgl.createProgram.bind(d_wgl));;;;     // [---][016]
                                                                 // [---][016]
            d_hp1=( C_P() ); //: Program #1 - GAME_TILE :://     // [018][016]
            d_hp2=( C_P() ); //: Program #2 - GAME_SPRITE://     // [018][016]
            d_hp3=( C_P() ); //: Program #3 - MENU_TILE :://     // [018][016]
            d_hp4=( C_P() ); //: Program #4 - MENU_SPRITE://     // [018][016]
                                                                 // [---][016]
        //:============:#_CREATE_EMPTY_RENDER_PIPELINES_#://     // [---][016]
        //:#_ATTACH_SHADERS_TO_PROGRAM_#:================://     // [---][017]
                                                                 // [---][017]
            const A_S =(d_wgl.attachShader.bind(d_wgl));;;;;     // [---][017]
                                                                 // [---][017]
            A_S( d_hp1 , d_hv1 , d_hf1 );//:  GAME_TILE  ://     // [018][017]
            A_S( d_hp2 , d_hv2 , d_hf2 );//:  GAME_SPRITE://     // [018][017]
            A_S( d_hp3 , d_hv3 , d_hf3 );//:  MENU_TILE  ://     // [018][017]
            A_S( d_hp4 , d_hv4 , d_hf4 );//:  MENU_SPRITE://     // [018][017]
                                                                 // [---][017]
        //:================:#_ATTACH_SHADERS_TO_PROGRAM_#://     // [---][017]
        //:#_ADD_SOURCE_CODE_STRINGS_#:==================://     // [023]
                                                                 // [023]
            const S_S =(d_wgl.shaderSource.bind(d_wgl));;;;;     // [023]
                                                                 // [023]
            //:#_LOAD_ALL_SOURCE_VERTEX_#:===============://     // [023]
                                                                 // [023]
                S_S( d_hv1 , d_sv1 );                            // [023]
                S_S( d_hv2 , d_sv2 );                            // [023]
                S_S( d_hv3 , d_sv3 );                            // [023]
                S_S( d_hv4 , d_sv4 );                            // [023]
                                                                 // [023]
            //:===============:#_LOAD_ALL_SOURCE_VERTEX_#://     // [023]
            //:#_LOAD_ALL_SOURCE_FRAGMENT_#:=============://     // [023]
                                                                 // [023]
                S_S( d_hf1 , d_sf1 );                            // [023]
                S_S( d_hf2 , d_sf2 );                            // [023]
                S_S( d_hf3 , d_sf3 );                            // [023]
                S_S( d_hf4 , d_sf4 );                            // [023]
                                                                 // [023]
            //:=============:#_LOAD_ALL_SOURCE_FRAGMENT_#://     // [023]
                                                                 // [023]
        //:==================:#_ADD_SOURCE_CODE_STRINGS_#://     // [023]
        //:#_COMPILE_AND_LINK_#:=========================://     // [---][020]
                                                                 // [---][020]
            //:#_COMPILE_ALL_VERTEX_SHADERS_#:===========://     // [---][020]
                                                                 // [---][020]
                F_COMPILE_SHADER( d_hv1 , "[_d_hv1_]" );;;;;     // [021][020]
                F_COMPILE_SHADER( d_hv2 , "[_d_hv2_]" );;;;;     // [021][020]
                F_COMPILE_SHADER( d_hv3 , "[_d_hv3_]" );;;;;     // [021][020]
                F_COMPILE_SHADER( d_hv4 , "[_d_hv4_]" );;;;;     // [021][020]
                                                                 // [---][020]
            //:===========:#_COMPILE_ALL_VERTEX_SHADERS_#://     // [---][020]
            //:#_COMPILE_ALL_FRAGMENT_SHADERS_#:=========://     // [---][020]
                                                                 // [---][020]
                F_COMPILE_SHADER( d_hf1 , "[_d_hf1_]" );;;;;     // [021][020]
                F_COMPILE_SHADER( d_hf2 , "[_d_hf2_]" );;;;;     // [021][020]
                F_COMPILE_SHADER( d_hf3 , "[_d_hf3_]" );;;;;     // [021][020]
                F_COMPILE_SHADER( d_hf4 , "[_d_hf4_]" );;;;;     // [021][020]
                                                                 // [---][020]
            //:=========:#_COMPILE_ALL_FRAGMENT_SHADERS_#://     // [---][020]
            //:#_LINK_YOUR_FOUR_PROGRAMS_#:==============://     // [---][020]
                                                                 // [---][020]
                F_LINK_PROGRAM(   d_hp1 , "[_d_hp1_]" );;;;;     // [025][020]
                F_LINK_PROGRAM(   d_hp2 , "[_d_hp2_]" );;;;;     // [025][020]
                F_LINK_PROGRAM(   d_hp3 , "[_d_hp3_]" );;;;;     // [025][020]
                F_LINK_PROGRAM(   d_hp4 , "[_d_hp4_]" );;;;;     // [025][020]
                                                                 // [---][020]
            //:==============:#_LINK_YOUR_FOUR_PROGRAMS_#://     // [---][020]
                                                                 // [---][020]
        //:=========================:#_COMPILE_AND_LINK_#://     // [---][020]
                                                                 // [---][---]
    //:======================================================:// // [---][005]
    };;//:::::::::::::::::::::::::::::::::::::::::[ F_SETUP ]:// // [---][005]
                                                                 // [---][---]
//:===========================================:#_F_FUNCTION_#:// // [---][004][---]
//:#_M_MAIN_#:===============================================:// // [006]
    (( int_main_void )=>{  //::::::::::::::::::::::::[ MAIN ]:// // [006]
                                                                 // [006]
        F_SETUP();                                               // [006]
                                                                 // [006]
    })( /**IIFE**/ );; //::::::::::::::::::::::::::::[ MAIN ]:// // [006]
//:===============================================:#_M_MAIN_#:// // [006]
//| Code Section Is Above This Point                         |// // [---][001]
//+==========================================================+// // [---][001]
//+==========================================================+// // [---][001]
//| Comments Section Is Below This Point                     |// // [---][001]
//+==========================================================+// // [---][001]
/** ******************************************************** *** // [---][001]
#_KANJIS_TILEMAP_BASE_# :======================================: // [---][001]
                                                                 // [---][001]
    Goal : Create a tilemap project who's source code            // [---][001]
         : can be used any time you want to do a quick           // [---][001]
         : tilemap rendering experiment. It should be            // [---][001]
         : flexible enough to use is as a library that           // [---][001]
         : can be used for the[ MKB ]project.                    // [---][001]
         : @MKB@ : Magic Kyoot Ball.                             // [---][001]
                                                                 // [---][001]
    Structure : 1 shader for tilemap stuff                       // [---][001]
              : 1 shader for sprite rendering stuff.             // [---][001]
              : 1 shader for tilemap menu stuff                  // [---][001]
              : 1 shader for sprite MENU rendering.              // [---][001]
                                                                 // [---][001]
    Uniforms  : Only 4 uniforms. 1 for each texture              // [---][001]
              : sampler we need. Everything else is              // [---][001]
              : encoded into texture memory somehow.             // [---][001]
                                                                 // [---][001]
    Whatever Texture Memory Block :                              // [---][001]
                                                                 // [---][001]
        @wmx@ : whatever_memory - X origin                       // [---][001]
        @wmy@ : whatever_memory - Y origin                       // [---][001]
                                                                 // [---][001]
                                                                 // [---][001]
:======================================: #_KANJIS_TILEMAP_BASE_# // [---][001]
#_C_CONSTANT_# :===============================================: // [007]
                                                                 // [007]
    Constants are single integers or strings that are            // [007]
    immutable. Complex immutable data does __NOT__ belong        // [007]
    in the constant section. Constants must be expressible       // [007]
    as "#define" macros in C99.                                  // [007]
                                                                 // [007]
    For example : A lookup table does not go in the              // [007]
                : constant section, even though it is            // [007]
                : an immutable array of values.                  // [007]
                                                                 // [007]
:===============================================: #_C_CONSTANT_# // [007]
#_D_DATA_# :===================================================: // [---][004][002]
                             TAG[  D_FOR_DATA_WHICH_IS_GLOBAL  ] // [---][004][---]
                             TAG[ _D_FOR_DATA_WHICH_IS_GLOBAL_ ] // [---][004][---]
                                                                 // [---][002]
    Anything that ends up colliding with "AIM.JS"                // [---][002]
    will get further prefix of "ktb_" "                          // [---][002]
    So, if[ d_p2k_000 ]collides, with "AIM.JS" then              // [---][002]
    [ d_p2k_000 ]becomes[ ktb_d_p2k_000 ].                       // [---][002]
                                                                 // [---][002]
                                                                 // [---][002]
    All mutable data or complex immutable data goes here.        // [---][002]
    The global/toplevel stuff. The filescope stuff.              // [---][002]
                                                                 // [---][002]
:===================================================: #_D_DATA_# // [---][004][002]
#_F_FUNCTION_# :===============================================: // [---][007]
                                                                 // [---][007]
    Functions go in this section and start with an "F".          // [---][007]
                                                                 // [---][007]
:===============================================: #_F_FUNCTION_# // [---][007]
#_M_MAIN_# :===================================================: // [---][007]
                                                                 // [---][007]
    Though this is a JAVASCRIPT file, we will be using           // [---][007]
    a "C99 Style". So we wil pretend this is our                 // [---][007]
    "MAIN" right here.                                           // [---][007]
                                                                 // [---][007]
:===================================================: #_M_MAIN_# // [---][007]
#_BASIC_DOM_SETUP_# :==========================================: // [---][008]
                                                                 // [---][008]
    Bare basic domain object model (DOM) setup.                  // [---][008]
    I H_A_T_E writing HTML, so we are going to do                // [---][008]
    as little of that as required to get setup.                  // [---][008]
                                                                 // [---][008]
:==========================================: #_BASIC_DOM_SETUP_# // [---][008]
#_SETUP_FUNCTION_POINTERS_# :==================================: // [---][009]
                                                                 // [---][009]
    Function pointers within setup function to help make         // [---][009]
    the code more terse, as our column space here is             // [---][009]
    very precious to us.                                         // [---][009]
                                                                 // [---][009]
:==================================: #_SETUP_FUNCTION_POINTERS_# // [---][009]
#_BASIC_DOM_CHECK_# :==========================================: // [---][009]
                                                                 // [---][009]
    Make sure the basic DOM setup was done correctly.            // [---][009]
    All object references should be non null.                    // [---][009]
                                                                 // [---][009]
:==========================================: #_BASIC_DOM_CHECK_# // [---][009]
$_BODY_CREATED_AND_APPENDED_$ :================================: // [---][010]
                                                                 // [---][010]
    The [ .HTM / .HTML ]file did not start with a body.          // [---][010]
    ( This can happen with BARE_MINIMUM_HTML_FILE )              // [---][010]
    We added a body object to the file and have                  // [---][010]
    notified you.                                                // [---][010]
                                                                 // [---][010]
:================================: $_BODY_CREATED_AND_APPENDED_$ // [---][010]
#_BASIC_GRAPHICS_SETUP_# :=====================================: // [---][011]
                                                                 // [---][011]
    Get a webgl context , which is basically OpenGL              // [---][011]
    with a few stupid-ass object oriented modifications.         // [---][011]
                                                                 // [---][011]
:=====================================: #_BASIC_GRAPHICS_SETUP_# // [---][011]
#_BASIC_GRAPHICS_CHECK_# :=====================================: // [---][011]
                                                                 // [---][011]
    Make sure we were able to create a webgl context.            // [---][011]
    Otherwise, abort mission and give up forever.                // [---][011]
    Decide to stop being a programmer after 15 years             // [---][011]
    and go work on an oil rig in the middle of alaska            // [---][011]
    where I fist fight polar bears in my off time.               // [---][011]
                                                                 // [---][011]
:=====================================: #_BASIC_GRAPHICS_CHECK_# // [---][011]
#_D_DATA_SHADER_001_# :========================================: // [---][013][---]
                                                                 // [---][013][---]
    @SHADER_001@ : VERTEX+FRAGMENT game __TILE_MAP__ shader.     // [---][013][---]
                                                                 // [---][013][---]
:========================================: #_D_DATA_SHADER_001_# // [---][013][---]
#_D_DATA_SHADER_002_# :========================================: // [---][013][---]
                                                                 // [---][013][---]
    @SHADER_002@ : VERTEX+FRAGMENT game POINT_SPRITE shader.     // [---][013][---]
                                                                 // [---][013][---]
:========================================: #_D_DATA_SHADER_002_# // [---][013][---]
#_D_DATA_SHADER_003_# :========================================: // [---][013][---]
                                                                 // [---][013][---]
    @SHADER_003@ : VERTEX+FRAGMENT menu __TILE_MAP__ shader.     // [---][013][---]
                                                                 // [---][013][---]
:========================================: #_D_DATA_SHADER_003_# // [---][013][---]
#_D_DATA_SHADER_004_# :========================================: // [---][013][---]
                                                                 // [---][013][---]
    @SHADER_004@ : VERTEX+FRAGMENT menu POINT_SPRITE shader.     // [---][013][---]
                                                                 // [---][013][---]
:========================================: #_D_DATA_SHADER_004_# // [---][013][---]
?_ADVANCED_GRAPHICS_SETUP_? :==================================: // [---][014]
                                                                 // [---][014]
    A "?" around a section marker means it is an orphaned        // [---][014]
    section marker that does not link into the                   // [---][014]
    code section of the file.                                    // [---][014]
                                                                 // [---][014]
    There is no "ADVANCED_GRAPHICS_SETUP" section ,              // [---][014]
    because all of tha setup code is spanned amongst             // [---][014]
    many different sections following the                        // [---][014]
    "BASCI_GRAPHICS_SETUP" code sections.                        // [---][014]
                                                                 // [---][014]
:==================================: ?_ADVANCED_GRAPHICS_SETUP_? // [---][014]
#_CREATE_EMPTY_SHADER_PROGRAMS_# :=============================: // [---][014]
                                                                 // [---][014]
    Create the empty shader programs that will need to           // [---][014]
    be filled with the shader source code strings                // [---][014]
    eventually.                                                  // [---][014]
                                                                 // [---][014]
    We have 8 shader programs because we have 4                  // [---][014]
    shader pipelines and 2 shaders per pipeline.                 // [---][014]
                                                                 // [---][014]
:=============================: #_CREATE_EMPTY_SHADER_PROGRAMS_# // [---][014]
$_YOUR_SHADER_IS_EVIL_$ :======================================: // [---][015][---]
                                                                 // [---][015][---]
    Your shader is evil and that is why it isn't working.        // [---][015][---]
    Syntax errors are the devil's work.                          // [---][015][---]
                                                                 // [---][015][---]
:======================================: $_YOUR_SHADER_IS_EVIL_$ // [---][015][---]
#_CREATE_EMPTY_RENDER_PIPELINES_# :============================: // [---][016][---]
                                                                 // [---][016][---]
    Create the empty program objects the represent a             // [---][016][---]
    "rendering pipeline" these program objects need              // [---][016][---]
    to be "filled with" ( reference ) the shader                 // [---][016][---]
    programs. At minimum a complete program object               // [---][016][---]
    needs a vertex shader and fragment shader stage.             // [---][016][---]
                                                                 // [---][016][---]
    A truely minimal setup just needs the                        // [---][016][---]
    "GLSL Version Directive" at the top of the                   // [---][016][---]
    file on its OWN LINE and nothing else.                       // [---][016][---]
                                                                 // [---][016][---]
    Version Directive Must Be :                                  // [---][016][---]
                                                                 // [---][016][---]
        1. On it's own line.                                     // [---][016][---]
        2. NOTHING AT END OF LINE , NOT EVEN COMMENTS            // [---][016][---]
        3. No extra spaces before or after directive.            // [---][016][---]
                                                                 // [---][016][---]
    The version directive is super fucky picky.                  // [---][016][---]
    The version directive is WORSE THAN PYTHON                   // [---][016][---]
    when it comes to "white space".                              // [---][016][---]
                                                                 // [---][016][---]
:============================: #_CREATE_EMPTY_RENDER_PIPELINES_# // [---][016][---]
#_ATTACH_SHADERS_TO_PROGRAM_# :================================: // [---][017][---]
                                                                 // [---][017][---]
    Attach respective shaders to their programs...               // [---][017][---]
    Wait... Have we loaded source code into the                  // [---][017][---]
    shaders yet ? Let me check...                                // [---][017][---]
                                                                 // [---][017][---]
    No, we haven't. I don't know if that will end                // [---][017][---]
    up being a problem or not. We will find out.                 // [---][017][---]
                                                                 // [---][017][---]
:================================: #_ATTACH_SHADERS_TO_PROGRAM_# // [---][017][---]
?_VIDEO_18_CHANGES_? :=========================================: // [---][018][---]
                                                                 // [---][018][---]
    We did refactoring to the names for better consistency.      // [---][018][---]
    Names ( identifiers ) should be written in a                 // [---][018][---]
    "general to specific" fashion.                               // [---][018][---]
                                                                 // [---][018][---]
:=========================================: ?_VIDEO_18_CHANGES_? // [---][018][---]
$_YOUR_PROGRAM_IS_EVIL_$ :=====================================: // [---][019][---]
                                                                 // [---][019][---]
    Your webgl program object is morally corrupt and that        // [---][019][---]
    is why your code doesn't work. If only you used more         // [---][019][---]
    "thoughts and prayers" I am sure it would work.              // [---][019][---]
                                                                 // [---][019][---]
    The 24-to-0 hour help hotline is here on twitch:             // [---][019][---]
                                                                 // [---][019][---]
    www.twitch.tv/KanjiCoder                                     // [---][019][---]
                                                                 // [---][019][---]
    Ask away and I will try and help!                            // [---][019][---]
                                                                 // [---][019][---]
:=====================================: $_YOUR_PROGRAM_IS_EVIL_$ // [---][019][---]
#_COMPILE_AND_LINK_# :=========================================: // [---][020]
                                                                 // [---][020]
    Compile and Link your program.                               // [---][020]
    What does that mean? Why "Compile" first and                 // [---][020]
    __THEN__ link ?                                              // [---][020]
                                                                 // [---][020]
    The termonology comes from C-code.                           // [---][020]
    Each shader can be thought of as a "translation unit" .      // [---][020]
    Chat GPT disagrees with me and says that it is not           // [---][020]
    analogous and that it is more akin to a                      // [---][020]
    "single function module". I think chat GPT is                // [---][020]
    gas lighting me again.                                       // [---][020]
                                                                 // [---][020]
    Anyways, point is that you "compile" many different          // [---][020]
    binaries from source files, and those compiled               // [---][020]
    binaries do not create an entire program until               // [---][020]
    those binaries are "sewn together" / "stitched together"     // [---][020]
    by "linking".                                                // [---][020]
                                                                 // [---][020]
:=========================================: #_COMPILE_AND_LINK_# // [---][020]
#_COMPILE_ALL_VERTEX_SHADERS_# :===============================: // [---][020]
                                                                 // [---][020]
    Compile all of the __VERTEX__ shaders in our project.        // [---][020]
    A total of four, 1 for each program.                         // [---][020]
                                                                 // [---][020]
:===============================: #_COMPILE_ALL_VERTEX_SHADERS_# // [---][020]
#_COMPILE_ALL_FRAGMENT_SHADERS_# :=============================: // [---][020]
                                                                 // [---][020]
    Compile all of the __FRAGMENT__ shaders in our project.      // [---][020]
    A total of four, 1 for each program.                         // [---][020]
                                                                 // [---][020]
:=============================: #_COMPILE_ALL_FRAGMENT_SHADERS_# // [---][020]
#_LINK_YOUR_FOUR_PROGRAMS_# :==================================: // [---][020]
                                                                 // [---][020]
    Link all four(4) of the __PROGRAM__ objects in our           // [---][020]
    project together with their 2-respective shaders             // [---][020]
    to create four(4) complete shader [ objects / programs ].    // [---][020]
                                                                 // [---][020]
:==================================: #_LINK_YOUR_FOUR_PROGRAMS_# // [---][020]
#_ADD_SOURCE_CODE_STRINGS_# :==================================: // [023][---]
                                                                 // [023][---]
    We forgot to do this. Before we can compile and link         // [023][---]
    we need to make sure that our shader program handles         // [023][---]
    are loaded with source code.                                 // [023][---]
                                                                 // [023][---]
    I think "loaded" is correct because our webgl context        // [023][---]
    is going to create a[ deep-string-copy ]of the text          // [023][---]
    we provide to it, not simply hold onto a pointer to          // [023][---]
    the string.                                                  // [023][---]
                                                                 // [023][---]
:==================================: #_ADD_SOURCE_CODE_STRINGS_# // [023][---]
#_LOAD_ALL_SOURCE_VERTEX_# :===================================: // [023][---]
                                                               | // [023][---]
    Load all __VERTEX__ code into __VERTEX__ shader objects.   | // [023][---]
                                                               | // [023][---]
:===================================: #_LOAD_ALL_SOURCE_VERTEX_# // [023][---]
#_LOAD_ALL_SOURCE_FRAGMENT_# :=================================: // [023][---]
                                                               | // [023][---]
    Load all __FRAGMENT__ code into __FRAGMENT__ shader objects| // [023][---]
                                                               | // [023][---]
:=================================: #_LOAD_ALL_SOURCE_FRAGMENT_# // [023][---]

*** ******************************************************** **/ // [---][001]
//+==========================================================+// // [---][001]
//| Comments Section Is Above This Point                     |// // [---][001]
//+==========================================================+// // [---][001]
     
     
     
     
     
     
     
     
     
     
     
     