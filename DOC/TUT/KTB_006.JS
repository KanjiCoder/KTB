//+==========================================================+// // [---][001]
//| Code Section Is Below This Point                         |// // [---][001]
//+==========================================================+// // [---][001]
//|#_KANJIS_TILEMAP_BASE_#:==================================|// // [---][001]
//|                                                          |// // [---][001]
//|  @KTB@ : Kanji_Tilemap_Base / Kanjis_Tilemap_Base        |// // [---][001]
//|                                                          |// // [---][001]
//|  A project to allow you to quickly experiment with       |// // [---][001]
//|  tilemap shader ideas without having to do all of        |// // [---][001]
//|  the setup code needed to create the webgl contexts      |// // [---][001]
//|  and basic editing code for setting down tiles.          |// // [---][001]
//|                                                          |// // [---][001]
//+==================================:#_KANJIS_TILEMAP_BASE_#+// // [---][001]
//:#_C_CONSTANT_#:===========================================:// // [004][---]
                                                                 // [004][---]
    /** NOTHING HERE YET IN CONSTANT SECTION **/                 // [004][---]
                                                                 // [004][---]
//:===========================================:#_C_CONSTANT_#:// // [004][---]
//:#_D_DATA_#:===============================================:// // [004][002]
                                                                 // [---][002]
    var d_p2k_l01 ; //: Uniform LOCATION #1 ( sampler )::://     // [---][002]
    var d_p2k_u01 ; //:      GPU UNIFORM #1 ( sampler )::://     // [---][002]
                    //:                                ::://     // [---][002]
    var d_p2k_l02 ; //: Uniform LOCATION #2 ( sampler )::://     // [---][002]
    var d_p2k_u02 ; //:      GPU UNIFORM #2 ( sampler )::://     // [---][002]
                    //:                                ::://     // [---][002]
    var d_p2k_l03 ; //: Uniform LOCATION #3 ( sampler )::://     // [---][002]
    var d_p2k_u03 ; //:      GPU UNIFORM #3 ( sampler )::://     // [---][002]
                    //:                                ::://     // [---][002]
    var d_p2k_l04 ; //: Uniform LOCATION #4 ( sampler )::://     // [---][002]
    var d_p2k_u04 ; //:      GPU UNIFORM #4 ( sampler )::://     // [---][002]
                                                                 // [---][---]
    var d_ph1 ;;;;; //: Program Handle #1 :::::::::::::::://     // [---][003]
    var d_ph2 ;;;;; //: Program Handle #2 :::::::::::::::://     // [---][003]
    var d_ph3 ;;;;; //: Program Handle #3 :::::::::::::::://     // [---][003]
    var d_ph4 ;;;;; //: Program Handle #4 :::::::::::::::://     // [---][003]
                                                                 // [---][003]
    var d_hv1 ;;;;; //: Handle_Vertex  #1 (shader_object)://     // [---][003]
    var d_hv2 ;;;;; //: Handle_Vertex  #2 (shader_object)://     // [---][003]
    var d_hv3 ;;;;; //: Handle_Vertex  #3 (shader_object)://     // [---][003]
    var d_hv4 ;;;;; //: Handle_Vertex  #4 (shader_object)://     // [---][003]
                                                                 // [---][003]
    var d_hf1 ;;;;; //: Handle_Fragme  #1 (shader_object)://     // [---][003]
    var d_hf2 ;;;;; //: Handle_Fragme  #2 (shader_object)://     // [---][003]
    var d_hf3 ;;;;; //: Handle_Fragme  #3 (shader_object)://     // [---][003]
    var d_hf4 ;;;;; //: Handle_Fragme  #4 (shader_object)://     // [---][003]
                                                                 // [---][003]
    var d_sv1 ;;;;; //: Source_Vertex  #1 (source_string)://     // [---][003]
    var d_sv2 ;;;;; //: Source_Vertex  #2 (source_string)://     // [---][003]
    var d_sv3 ;;;;; //: Source_Vertex  #3 (source_string)://     // [---][003]
    var d_sv4 ;;;;; //: Source_Vertex  #4 (source_string)://     // [---][003]
                                                                 // [---][003]
    var d_sf1 ;;;;; //: Source_Fragme  #1 (source_string)://     // [---][003]
    var d_sf2 ;;;;; //: Source_Fragme  #2 (source_string)://     // [---][003]
    var d_sf3 ;;;;; //: Source_Fragme  #3 (source_string)://     // [---][003]
    var d_sf4 ;;;;; //: Source_Fragme  #4 (source_string)://     // [---][003]
                                                                 // [---][---]
//:===============================================:#_D_DATA_#:// // [004][002]
//:#_F_FUNCTION_#:===========================================:// // [004][---]
                                                                 // [---]
    const   F_INPUT_MOUSE =( i_mev )=>{   //::::::::::::::::::// // [005]
    //:======================================================:// // [005]
                                                                 // [005]
        /** CODE_GOES_HERE **/                                   // [005]
                                                                 // [005]
    //:======================================================:// // [005]
    };;//:::::::::::::::::::::::::::::::::::[ F_INPUT_MOUSE ]:// // [005]
    const   F_INPUT_KEYBOARD =( i_kev )=>{   //:::::::::::::::// // [005]
    //:======================================================:// // [005]
                                                                 // [005]
        /** CODE_GOES_HERE **/                                   // [005]
                                                                 // [005]
    //:======================================================:// // [005]
    };;//::::::::::::::::::::::::::::::::[ F_INPUT_KEYBOARD ]:// // [005]
    const   F_LOOP_FOREVER =( )=>{  //::::::::::::::::::::::::// // [005]
                                                                 // [005]
        /** CODE_GOES_HERE **/                                   // [005]
                                                                 // [005]
    };;//::::::::::::::::::::::::::::::::::[ F_LOOP_FOREVER ]:// // [005]
    const   F_SETUP =( )=>{   //::::::::::::::::::::::::::::::// // [005]
    //:======================================================:// // [005]
                                                                 // [---]
        window.alert( "[HELLO_WORLD]" );                         // [006][MOV][001]
                                                                 // [---][---]
    //:======================================================:// // [---][005]
    };;//:::::::::::::::::::::::::::::::::::::::::[ F_SETUP ]:// // [---][005]
                                                                 // [---][---]
//:===========================================:#_F_FUNCTION_#:// // [---][004][---]
//:#_M_MAIN_#:===============================================:// // [006]
    (( int_main_void )=>{  //::::::::::::::::::::::::[ MAIN ]:// // [006]
                                                                 // [006]
        F_SETUP();                                               // [006]
                                                                 // [006]
    })( /**IIFE**/ );; //::::::::::::::::::::::::::::[ MAIN ]:// // [006]
//:===============================================:#_M_MAIN_#:// // [006]
//| Code Section Is Above This Point                         |// // [---][001]
//+==========================================================+// // [---][001]
//+==========================================================+// // [---][001]
//| Comments Section Is Below This Point                     |// // [---][001]
//+==========================================================+// // [---][001]
/** ******************************************************** *** // [---][001]
#_KANJIS_TILEMAP_BASE_# :======================================: // [---][001]
                                                                 // [---][001]
    Goal : Create a tilemap project who's source code            // [---][001]
         : can be used any time you want to do a quick           // [---][001]
         : tilemap rendering experiment. It should be            // [---][001]
         : flexible enough to use is as a library that           // [---][001]
         : can be used for the[ MKB ]project.                    // [---][001]
         : @MKB@ : Magic Kyoot Ball.                             // [---][001]
                                                                 // [---][001]
    Structure : 1 shader for tilemap stuff                       // [---][001]
              : 1 shader for sprite rendering stuff.             // [---][001]
              : 1 shader for tilemap menu stuff                  // [---][001]
              : 1 shader for sprite MENU rendering.              // [---][001]
                                                                 // [---][001]
    Uniforms  : Only 4 uniforms. 1 for each texture              // [---][001]
              : sampler we need. Everything else is              // [---][001]
              : encoded into texture memory somehow.             // [---][001]
                                                                 // [---][001]
    Whatever Texture Memory Block :                              // [---][001]
                                                                 // [---][001]
        @wmx@ : whatever_memory - X origin                       // [---][001]
        @wmy@ : whatever_memory - Y origin                       // [---][001]
                                                                 // [---][001]
                                                                 // [---][001]
:======================================: #_KANJIS_TILEMAP_BASE_# // [---][001]
#_D_DATA_# :===================================================: // [004][002]
                             TAG[  D_FOR_DATA_WHICH_IS_GLOBAL  ] // [004][---]
                             TAG[ _D_FOR_DATA_WHICH_IS_GLOBAL_ ] // [004][---]
                                                                 // [---][002]
    Anything that ends up colliding with "AIM.JS"                // [---][002]
    will get further prefix of "ktb_" "                          // [---][002]
    So, if[ d_p2k_000 ]collides, with "AIM.JS" then              // [---][002]
    [ d_p2k_000 ]becomes[ ktb_d_p2k_000 ].                       // [---][002]
                                                                 // [---][002]
                                                                 // [---][002]
    All mutable data or complex immutable data goes here.        // [---][002]
    The global/toplevel stuff. The filescope stuff.              // [---][002]
                                                                 // [---][002]
:===================================================: #_D_DATA_# // [004][002]
*** ******************************************************** **/ // [---][001]
//+==========================================================+// // [---][001]
//| Comments Section Is Above This Point                     |// // [---][001]
//+==========================================================+// // [---][001]
     
     
     
     
     
     
     
     
     
     
     
     